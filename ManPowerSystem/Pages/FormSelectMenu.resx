<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFcAAAD6AAAA+gAA
        APkAAAD5AAAA+QAAAPwAAADmAAAAKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZgAA
        ANwAAABWAAAASgAAAEsAAABJAAAAbwAAAOQAAAAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABpAAAAzgAAABAAAAAAAAAAAAAAAAAAAAAzAAAA3wAAADMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFAAAALUAAAC0AAAACQAAAAAAAAAAAAAAAAAAACkAAADhAAAAdQAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABPAAAAygAAADMAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAGwAAADlAAAAYAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAFAAAAEQAAAA8AAAAcAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AIAAAADWAAAAIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIAAACiAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAGwAAANMAAABpAAAAAAAAADoAAABlAAAAZwAAAGcAAABmAAAAUAAAABsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAGAAAADwAAADEAAAAFAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAArAAAAJYAAAAAAAAAmQAAAPwAAADTAAAAzgAAAM4AAADdAAAA0QAA
        AFUAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAAKYAAAAjAAAAAgAAAFsAAABNAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAoAAAAAAAAABSAAAA6gAAAEMAAAAMAAAAFwAA
        ACQAAACMAAAA4AAAAE8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAAADEAAAArwAAABMAAABoAAAA9gAA
        AJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAACgAAAAAAAAAHkAAADOAAAAGAAA
        ADEAAACwAAAASAAAAAYAAAClAAAAxwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAN0AAAAqAAAAZwAA
        AOUAAADrAAAAnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAKAAAAADAAAAsAAA
        AJAAAAAhAAAAzAAAAOgAAADOAAAAIgAAAFcAAAD0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHAAAA4wAA
        ALYAAADlAAAAcAAAAKQAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAARAAAAAsAAACfAAAAoAAA
        AAMAAACwAAAAkQAAACAAAAB4AAAAMgAAAL8AAACnAAAAZwAAAPMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAYAAABgAAAAoAAAAFgAAAAEAAAAoAAAAKAAAAAEAAAAHwAAAAQAAAAUAAAAEgAAAC8AAADZAAAALwAA
        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
        iMQjA8DEAAPAAAADwAAAB+AAgA/wAcAf+AM=
</value>
  </data>
</root>